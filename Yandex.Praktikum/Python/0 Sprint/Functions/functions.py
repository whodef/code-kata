# Functions

# Задание 1
# Анфисе очень часто приходится объяснять пользователям, кто она такая. Практичным решением будет создать
# функцию и поместить в неё код, печатающий эти сообщения. Тогда из любой части программы можно будет вызвать
# эту функцию — и Анфиса расскажет о себе.

# На основе заготовленного кода напишите функцию say_about() для вывода приветственного сообщения Анфисы.
# Вызовите эту функцию, чтобы убедиться, что все работает так, как ожидалось.

# Здесь объявите функцию say_about()
def say_about():
    # Код, написанный ниже, переместите в тело объявленной функции
    print('Привет, я Анфиса!')
    print('Я персональный помощник.')
    print('Я ещё маленькая,')
    print('но постоянно расту и умнею:')
    print('ведь мой код каждый день дописывают!')


# Ниже вызовите объявленную вами функцию say_about()
say_about()


# Задание 2
# На основе заготовленного кода напишите функцию print_friends_count() для вывода количества друзей. При вызове в
# функцию должно передаваться количество друзей. Параметр функции должен называться friends_count.

# Вызовите эту функцию с разными аргументами не менее трёх раз. Функция должна сообщать о количестве друзей при
# любых целых положительных значениях переменной friends_count. Для количества друзей < 20, фраза должна корректно
# склоняться. Если же друзей очень много — двадцать или больше, — должно выводиться сообщение
# 'Ого, сколько у тебя друзей! Целых {friends_count}'

# Например:
# У тебя нет друзей
# У тебя 1 друг
# У тебя 2 друга
# У тебя 6 друзей
# Ого, сколько у тебя друзей! Целых 20

# Объявите функцию здесь
def print_friends_count(friends_count):
    # Код, написанный ниже, переместите внутрь объявленной вами функции
    if friends_count == 0:
        print('У тебя нет друзей')
    elif friends_count == 1:
        print('У тебя', friends_count, 'друг')
    elif 2 <= friends_count <= 4:
        print('У тебя', friends_count, 'друга')
    elif 5 <= friends_count < 20:
        print('У тебя', friends_count, 'друзей')
    else:
        print('Ого, сколько у тебя друзей! Целых', friends_count)


print_friends_count(21)


# Задание 3
# Напишите цикл, в котором функция print_friends_count() вызывается c аргументами от 0 до 20 включительно.
# Код самой функции не изменяйте. Цикл пишите после функции: перед объявлением цикла не должно быть отступов.

def print_friends_count(friends_count):
    if friends_count == 0:
        print('У тебя нет друзей')
    elif friends_count == 1:
        print('У тебя', friends_count, 'друг')
    elif friends_count >= 2 and friends_count <= 4:
        print('У тебя', friends_count, 'друга')
    elif friends_count >= 5 and friends_count < 20:
        print('У тебя', friends_count, 'друзей')
    else:
        print('Ого, сколько у тебя друзей! Целых', friends_count)


# Ниже напишите цикл, в котором будет вызываться функция print_friends_count
# с аргументом от 0 до 20 включительно
for friends_count in range(21):
    print_friends_count(friends_count)


############

# Function Arguments

# Задание 1
# Функция lets_go() ожидает на вход два аргумента. Если вызвать её без аргументов — она сломается.
# Измените объявление функции так, чтобы при вызове без аргументов она напечатала фразу Друг, пойдём учить Python.

# Настройте функцию так, чтобы она не сломалась при вызове без аргументов
def lets_go(name='Друг', target='учить Python'):
    print(name + ', пойдём ' + target)


# Вызовите функцию lets_go без аргументов
lets_go()

# Задание 2
# Если при вызове функции lets_go() передавать неименованные аргументы, то передать только второй аргумент не
# получится: функция передаст единственный аргумент в параметр name, а не в target, как нам хотелось бы.
# Исправьте вызов функции так, чтобы аргумент, указанный при вызове, был передан в параметр target.
# Вызов с именованными аргументами поможет решить эту задачу.

def lets_go(name='Друг', target='учить Python'):
    print(name + ', пойдём ' + target)


# Исправьте вызов так, чтобы аргумент был передан
# в параметр с именем target
lets_go(target='читать следующий урок!')
